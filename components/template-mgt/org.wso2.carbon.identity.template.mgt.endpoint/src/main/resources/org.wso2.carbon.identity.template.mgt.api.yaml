---
swagger: "2.0"
info:
  description: "A **RESTful API** to handle templates for dynamic prompt in adaptive\
    \ authentication for **WSO2 Identity Server** <br/> Written with [swagger 2](https://swagger.io/)"
  version: "1.0.0"
  title: "WSO2 Identity Server Rest API - Template Management"
  contact:
    name: "WSO2"
    url: "http://wso2.com/products/identity-server/"
    email: "architecture@wso2.org"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
basePath: "/t/{tenant-domain}/api/identity/template/mgt/v1.0.0"
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"
security:
  - UserSecurity: []
paths:
  /templates:
    get:
      summary: "Get an array of templates"
      operationId: "getTemplates"
      produces:
        - "application/json"
      parameters:
        - name: "limit"
          in: "query"
          description: "Limits the number of templates listed on a page"
          required: false
          type: "integer"
        - name: "offset"
          in: "query"
          description: "Specifies the starting point for the templates to be displayed"
          required: false
          type: "integer"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GetTemplatesResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: "Add a new template\n"
      description: "This API is used to store template information submitted by the\
        \ user.\n"
      operationId: "addTemplate"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "template"
          description: "This represents the Template object that needs to be added to\
          \ the database"
          required: true
          schema:
            $ref: "#/definitions/TemplateRequest"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  /templates/{templateName}:
    get:
      summary: "Find template by Name\n"
      description: "This API is used to retrieve a specific template using the template\
        \ name. \n"
      operationId: "getTemplateByName"
      produces:
        - "application/json"
      parameters:
        - name: "templateName"
          in: "path"
          description: "Name of template to return"
          required: true
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Template"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    put:
      summary: "Update an existing template      \n"
      description: "This API is used to update a template. \n"
      operationId: "updateTemplate"
      produces:
        - "application/json"
      parameters:
        - name: "templateName"
          in: "path"
          description: "Name of the template to be updated"
          required: true
          type: "string"
        - in: "body"
          name: "newTemplate"
          required: true
          schema:
            $ref: "#/definitions/UpdateTemplateRequest"
      responses:
        202:
          description: "Accepted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Delete a template"
      description: "This API is used to delete a template.\n"
      operationId: "deleteTemplate"
      produces:
        - "application/json"
      parameters:
        - name: "templateName"
          in: "path"
          description: "Name of the template to be deleted"
          required: true
          type: "string"
      responses:
        202:
          description: "Accepted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
securityDefinitions:
  UserSecurity:
    type: "basic"
definitions:
  TemplateRequest:
    type: "object"
    required:
      - "templateName"
    properties:
      templateName:
        type: "string"
        description: "The name of the template given by the admin"
      description:
        type: "string"
        description: "A description for the template given by the admin"
      templateScript:
        type: "string"
        description: "This indicates the script of the template"
    example:
      templateName: "sample template name"
      description: "sample description"
      templateScript: "sample template script"
  Template:
    type: "object"
    properties:
      templateName:
        type: "string"
        description: "The name of the template given by the admin"
      description:
        type: "string"
        description: "A description for the template given by the admin"
      templateScript:
        type: "string"
        description: "This indicates the script of the template"
    example:
      templateName: "sample template name"
      description: "sample description"
      templateScript: "sample script"
  UpdateTemplateRequest:
    type: "object"
    required:
      - "data"
    properties:
      templateName:
        type: "string"
        description: "The name of the template given by the admin"
      description:
        type: "string"
        description: "A description for the template given by the admin"
      templateScript:
        type: "string"
        description: "This indicates the script of the template"
    example:
      templateName: "sample template name"
      description: "sample description"
      templateScript: "sample template script"
  Error:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      description:
        type: "string"
  GetTemplatesResponse:
    type: "object"
    properties:
      TemplateName:
        type: "string"
      description:
        type: "string"
    example:
      TemplateName: "sample template name"
      description: "sample description"
